openapi: '3.0.3'

info:
  title: Boba Tracker Entries
  version: 0.1.0

servers:
  - url: http://localhost:3010

paths:
  /v0/boba:
    get:
      description: Returns an array of bobas
      responses:
        200:
          description: Boba Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BobaResponse'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates a new boba
      requestBody:
        description: Boba to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boba'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boba'
        400:
          description: Invalid ID
        409:
          description: Conflict. Requested ID in use.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Updates an existing boba entry
      requestBody:
        description: Boba to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boba'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boba'
        400:
          description: Invalid ID
        404:
          description: Boba not found.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    

  /v0/boba/{email}:
    get:
      description: Returns all drinks for one user
      parameters:
      - name: email
        in: path
        description: User's ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Boba found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boba'
        400:
          description: Invalid ID
        404:
          description: Boba not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/boba/{purchase_date}/{drinkname}/{email}:
    get:
      description: Returns a single boba
      parameters:
      - name: purchase_date
        in: path
        description: Date of Purchase must be in YYYY-MM-DD format
        required: true
        schema:
          type: string
      - name: drinkname
        in: path
        description: Name of the drink
        required: true
        schema:
          type: string
      - name: email
        in: path
        description: User's ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Boba found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boba'
        400:
          description: Invalid ID
        404:
          description: Boba not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a single boba
      parameters:
      - name: purchase_date
        in: path
        description: Date of Purchase must be in YYYY-MM-DD format
        required: true
        schema:
          type: string
      - name: drinkname
        in: path
        description: Name of the drink
        required: true
        schema:
          type: string
      - name: email
        in: path
        description: User's ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boba'
        400:
          description: Invalid ID
        404:
          description: Boba not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    BobaResponse:
      type: array
      items:
        $ref: '#/components/schemas/Boba'

    Boba:
      type: object
      additionalProperties: false
      properties:
        purchase_date:
          type: string
        drinkname:
          type: string
        price:
          type: number
          format: float
        sweetness:
          type: number
          format: float
        email:
          type: string
      required:
        - purchase_date
        - drinkname 
        - price
        - sweetness 
        - email


